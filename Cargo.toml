[package]
name = "my-webpage"
version = "0.1.2"
edition = "2024"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
leptos = { version = "0.8.10", default-features = false }
leptos_router = { version = "0.8.8", features = ["nightly"] }
axum = { version = "0.8.6", optional = true }
console_error_panic_hook = { version = "0.1", optional = true }
leptos_axum = { version = "0.8.6", optional = true }
leptos_meta = { version = "0.8.5" }
tokio = { version = "1", features = ["rt-multi-thread"], optional = true }
wasm-bindgen = { version = "=0.2.104", optional = true }
# start-axum template deps end

# WORKAROUND
leptos_integration_utils = { version = "0.8.6", optional = true }
# WORKAROUND
anyhow = { version = "1.0.100" }
tracing = { version = "0.1.41" }
tracing-subscriber = { version = "0.3.20" }
time = { version = "0.3.44", optional = true, features = ["serde"] }
tower-http = { version = "0.6.6", features = ["trace"] }
pulldown-cmark = { version = "0.13.0", optional = true }
sqlx = { version = "0.8.6", features = [
    "postgres",
    "runtime-tokio-rustls",
    "time",
    "macros",
], optional = true }
dotenvy = { version = "0.15.7", optional = true }
serde = { version = "1.0.228" }

[target.'cfg(target_arch = "wasm32")'.dependencies]
tokio = { version = "1", default-features = false, optional = true }

[features]
ssr = [
    "dep:axum",
    "dep:tokio",
    "dep:leptos_axum",
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "dep:time",
    "dep:pulldown-cmark",
    "dep:sqlx",
    "dep:dotenvy",
    "dep:leptos_integration_utils",
]
hydrate = [
    "leptos/hydrate",
    "leptos/islands",
    "dep:console_error_panic_hook",
    "dep:wasm-bindgen",
]
time = ["dep:time"]

# Build profiles: speed up debug builds, keep heavy optimizations for release
[profile.dev]
opt-level = 0
debug = true
overflow-checks = false
incremental = true

[profile.release]
opt-level = 3
debug = false
overflow-checks = true
lto = true
codegen-units = 1
panic = "abort"

# Defines a size-optimized profile for the WASM bundle in release mode
[profile.wasm-release]
inherits = "release"
opt-level = 'z'
lto = true
codegen-units = 1
panic = "abort"

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "my-webpage"

tailwind-input-file = "style/tailwind.css"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The port to use for automatic reload monitoring
reload-port = 3001

# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
#   [Windows] for non-WSL use "npx.cmd playwright test"
#   This binary name can be checked in Powershell with Get-Command npx
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
