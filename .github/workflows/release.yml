name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: mywebpage
        ports:
          - '5432:5432'
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install system dependencies (clang + mold)
        run: |
          sudo apt-get update
          sudo apt-get install -y clang mold

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install DaisyUI (latest)
        run: |
          npm --version
          node --version
          # Install DaisyUI plugin so Tailwind CLI can require it at build time
          npm install --no-save daisyui@latest

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: wasm32-unknown-unknown

      - name: Cache cargo
        uses: Swatinem/rust-cache@v2

      - name: Install cargo-leptos
        run: curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash && cargo binstall cargo-leptos --locked --no-confirm

      - name: Install sqlx-cli
        run: cargo binstall sqlx-cli

      - name: Install cross for cross-compilation
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Initialize database (create + migrate)
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/mywebpage
        run: |
          sqlx database create
          sqlx migrate run

      - name: Build for Linux (glibc)
        env:
          LEPTOS_OUTPUT_NAME: my-webpage
          LEPTOS_SITE_ROOT: site
          LEPTOS_SITE_PKG_DIR: pkg
          LEPTOS_ENV: PROD
          LEPTOS_TAILWIND_VERSION: v4.1.14
          DAISYUI_VERSION: latest
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/mywebpage
          RUST_BACKTRACE: full
        run: cargo leptos build --release -vv

      - name: Build for FreeBSD (cross)
        env:
          LEPTOS_OUTPUT_NAME: my-webpage
          LEPTOS_SITE_ROOT: site
          LEPTOS_SITE_PKG_DIR: pkg
          LEPTOS_ENV: PROD
          LEPTOS_TAILWIND_VERSION: v4.1.14
          DAISYUI_VERSION: latest
          SQLX_OFFLINE: true
          LEPTOS_BIN_CARGO_COMMAND: cross
          LEPTOS_BIN_TARGET_TRIPLE: x86_64-unknown-freebsd
          RUST_BACKTRACE: full
        run: |
          cargo leptos build --release -vv

      - name: Stage bundle (Linux)
        run: |
          set -e
          mkdir -p staging dist
          cp target/release/my-webpage staging/
          cp -r site staging/site
          cp example.env staging/.env
          tar -C staging -czf dist/my-webpage-${GITHUB_REF_NAME}-linux-x86_64.tar.gz my-webpage .env site

      - name: Stage bundle (FreeBSD)
        run: |
          set -e
          mkdir -p staging_freebsd dist
          cp target/x86_64-unknown-freebsd/release/my-webpage staging_freebsd/
          cp -r site staging_freebsd/site
          cp example.env staging_freebsd/.env
          tar -C staging_freebsd -czf dist/my-webpage-${GITHUB_REF_NAME}-freebsd-x86_64.tar.gz my-webpage .env site

      - name: Generate checksums
        run: |
          cd dist
          sha256sum *.tar.gz > SHA256SUMS
          sha512sum *.tar.gz > SHA512SUMS

      - name: Create Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          files: |
            dist/my-webpage-${{ github.ref_name }}-linux-x86_64.tar.gz
            dist/my-webpage-${{ github.ref_name }}-freebsd-x86_64.tar.gz
            dist/SHA256SUMS
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
